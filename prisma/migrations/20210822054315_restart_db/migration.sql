-- CreateEnum
CREATE TYPE "Skill_Type" AS ENUM ('SOFT', 'HARD');

-- CreateEnum
CREATE TYPE "Family" AS ENUM ('GENERAL', 'PROGRAMMING', 'MULTIMEDIA', 'QUANTITATIVE');

-- CreateEnum
CREATE TYPE "Services" AS ENUM ('CAREER_DEVELOPMENT', 'GENERAL', 'MOCK_INTERVIEW', 'CAREER_PLANNING', 'SUCCESS_AT_WORK', 'SKILLS_FOR_SUCCESS', 'WORK_LIFE_BALANCE', 'RESUME_CRITIQUE');

-- CreateEnum
CREATE TYPE "Major" AS ENUM ('ARTS_AND_SCIENCE', 'COMPUTER_SCIENCE', 'BUSINESS_INFORMATICS', 'HUMAN_BEHAVIOUR', 'ENGINEERING', 'CHEMICAL_ENGINEERING', 'CIVIL_ENGINEERING', 'COMPUTER_ENGINEERING', 'ELECTRICAL_ENGINEERING', 'ELECTRICAL_AND_BIOMEDICAL_ENGINEERING', 'MATERIALS_ENGINEERING', 'MECHANICAL_ENGINEERING', 'MECHATRONICS_ENGINEERING', 'NANOTECHNOLOGY_ENGINEERING', 'SOFTWARE_ENGINEERING', 'AEROSPACE_ENGINEERING', 'B_TECH', 'AUTOMATION_ENGINEERING', 'AUTOMOTIVE_AND_VEHICLE_ENGINEERING_TECHNOLOGY', 'BIOTECHNOLOGY', 'CIVIL_ENGINEERING_INFRASTRUCTURE_TECHNOLOGY', 'MANUFACTURING_ENGINEERING_TECHNOLOGY', 'POWER_AND_ENERGY_ENGINEERING_TECHNOLOGY', 'SOFTWARE_ENGINEERING_AND_TECHNOLOGY', 'HEALTH_SCIENCES', 'ENGINEERING_SCIENCE_AND_ENTREPRENEURSHIP', 'BIOLOGY_AND_PHARMACOLOGY', 'MIDWIFERY_PROGRAM', 'PHYSICIAN_ASSISTANT', 'NURSING', 'ECONOMICS', 'HEALTH_AND_SOCIETY', 'HUMANITIES', 'SOCIAL_SCIENCES', 'ART_HISTORY', 'ARCHAEOLOGY', 'ANTHROPOLOGY', 'AGING_AND_SOCIETY', 'CLASSICS', 'COGNITIVE_SCIENCE', 'COMMUNICATION_STUDIES', 'ENGLISH_AND_CULTURAL_STUDIES', 'FRENCH', 'GEOGRAPHY', 'HISTORY', 'INDIGENOUS_STUDIES', 'JUSTICE_POLITICAL_PHILOSOPHY_AND_LAW', 'LABOUR_STUDIES', 'LINGUISTICS', 'MULTIMEDIA', 'PHILOSOPHY', 'POLITICAL_SCIENCE', 'SOCIETY_CULTURE_AND_RELIGION', 'SOCIAL_PSYCHOLOGY', 'SOCIOLOGY', 'THEATRE_AND_FILM', 'MUSIC', 'STUDIO_ART', 'SOCIAL_WORK', 'LAW', 'CHEMICAL_AND_PHYSICAL_SCIENCES', 'INTEGRATED_SCIENCES', 'LIFE_SCIENCES', 'MATHEMATICS_AND_STATISTICS', 'BIOSTATISTICS', 'DATA_SCIENCE', 'EARTH_AND_ENVIRONMENTAL_SCIENCES', 'ACTUARIAL_AND_FINANCIAL_MATHEMATICS', 'ASTROPHYSICS', 'BIOCHEMISTRY', 'BIOLOGY', 'CHEMICAL_BIOLOGY', 'CHEMISTRY', 'ENVIRONMENTAL_SCIENCES', 'COMPUTATIONAL_MATHEMATICS', 'NEUROSCIENCE', 'PHYSICS', 'PSYCHOLOGY_NEUROSCIENCE_AND_BEHAVIOUR', 'KINESIOLOGY', 'MEDICAL_RADIATION');

-- CreateTable
CREATE TABLE "User" (
    "id" SERIAL NOT NULL,
    "email" TEXT NOT NULL,
    "password" TEXT NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Mentor" (
    "id" SERIAL NOT NULL,
    "bio" TEXT,
    "job_title_primary" TEXT NOT NULL,
    "job_title_secondary" TEXT,
    "preferred_services" "Services"[],
    "birthyear" INTEGER NOT NULL,
    "degree_type" TEXT NOT NULL,
    "highest_education" INTEGER NOT NULL,
    "name" TEXT NOT NULL,
    "years_experience" INTEGER NOT NULL,
    "school_year" INTEGER,
    "userId" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Mentee" (
    "id" SERIAL NOT NULL,
    "bio" TEXT,
    "job_title_primary" TEXT,
    "job_title_secondary" TEXT,
    "preferred_services" "Services"[],
    "school_year" INTEGER,
    "birthyear" INTEGER NOT NULL,
    "degree_type" TEXT NOT NULL,
    "highest_education" INTEGER NOT NULL,
    "name" TEXT NOT NULL,
    "years_experience" INTEGER NOT NULL,
    "userId" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "University" (
    "id" SERIAL NOT NULL,
    "name" TEXT NOT NULL,
    "city" TEXT[],
    "province" TEXT NOT NULL,
    "country" TEXT NOT NULL,
    "language" TEXT NOT NULL,
    "category" TEXT NOT NULL,
    "undergrad_count" INTEGER NOT NULL,
    "postgrad_count" INTEGER NOT NULL,
    "total_count" INTEGER NOT NULL,
    "year_founded" INTEGER NOT NULL,
    "size_score" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Majors" (
    "id" SERIAL NOT NULL,
    "major" TEXT NOT NULL,
    "faculty" TEXT NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Skills" (
    "id" SERIAL NOT NULL,
    "skill" TEXT NOT NULL,
    "skill_type" "Skill_Type" NOT NULL,
    "family" "Family" NOT NULL,
    "role" TEXT[],
    "purpose" TEXT[],

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Language" (
    "id" SERIAL NOT NULL,
    "language" TEXT NOT NULL,
    "country" TEXT NOT NULL,
    "continent" TEXT NOT NULL,
    "population" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Meeting" (
    "id" SERIAL NOT NULL,
    "topic" "Services" NOT NULL,
    "start_time" TIMESTAMP(3),
    "end_time" TIMESTAMP(3),
    "cancelled" BOOLEAN,
    "cancel_reason" TEXT,
    "menteeId" INTEGER NOT NULL,
    "mentorId" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Proposed_Time" (
    "id" SERIAL NOT NULL,
    "time" TIMESTAMP(3) NOT NULL,
    "meetingId" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Availability" (
    "id" SERIAL NOT NULL,
    "time" TIMESTAMP(3) NOT NULL,
    "mentorId" INTEGER NOT NULL,

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MajorSimilarity" (
    "id" SERIAL NOT NULL,
    "name" TEXT NOT NULL,
    "ARTS_AND_SCIENCE" DECIMAL(3,2),
    "COMPUTER_SCIENCE" DECIMAL(3,2),
    "BUSINESS_INFORMATICS" DECIMAL(3,2),
    "HUMAN_BEHAVIOUR" DECIMAL(3,2),
    "ENGINEERING" DECIMAL(3,2),
    "CHEMICAL_ENGINEERING" DECIMAL(3,2),
    "CIVIL_ENGINEERING" DECIMAL(3,2),
    "COMPUTER_ENGINEERING" DECIMAL(3,2),
    "ELECTRICAL_ENGINEERING" DECIMAL(3,2),
    "ELECTRICAL_AND_BIOMEDICAL_ENGINEERING" DECIMAL(3,2),
    "MATERIALS_ENGINEERING" DECIMAL(3,2),
    "MECHANICAL_ENGINEERING" DECIMAL(3,2),
    "MECHATRONICS_ENGINEERING" DECIMAL(3,2),
    "NANOTECHNOLOGY_ENGINEERING" DECIMAL(3,2),
    "SOFTWARE_ENGINEERING" DECIMAL(3,2),
    "AEROSPACE_ENGINEERING" DECIMAL(3,2),
    "B_TECH" DECIMAL(3,2),
    "AUTOMATION_ENGINEERING" DECIMAL(3,2),
    "AUTOMOTIVE_AND_VEHICLE_ENGINEERING_TECHNOLOGY" DECIMAL(3,2),
    "BIOTECHNOLOGY" DECIMAL(3,2),
    "CIVIL_ENGINEERING_INFRASTRUCTURE_TECHNOLOGY" DECIMAL(3,2),
    "MANUFACTURING_ENGINEERING_TECHNOLOGY" DECIMAL(3,2),
    "POWER_AND_ENERGY_ENGINEERING_TECHNOLOGY" DECIMAL(3,2),
    "SOFTWARE_ENGINEERING_AND_TECHNOLOGY" DECIMAL(3,2),
    "HEALTH_SCIENCES" DECIMAL(3,2),
    "ENGINEERING_SCIENCE_AND_ENTREPRENEURSHIP" DECIMAL(3,2),
    "BIOLOGY_AND_PHARMACOLOGY" DECIMAL(3,2),
    "MIDWIFERY_PROGRAM" DECIMAL(3,2),
    "PHYSICIAN_ASSISTANT" DECIMAL(3,2),
    "NURSING" DECIMAL(3,2),
    "ECONOMICS" DECIMAL(3,2),
    "HEALTH_AND_SOCIETY" DECIMAL(3,2),
    "HUMANITIES" DECIMAL(3,2),
    "SOCIAL_SCIENCES" DECIMAL(3,2),
    "ART_HISTORY" DECIMAL(3,2),
    "ARCHAEOLOGY" DECIMAL(3,2),
    "ANTHROPOLOGY" DECIMAL(3,2),
    "AGING_AND_SOCIETY" DECIMAL(3,2),
    "CLASSICS" DECIMAL(3,2),
    "COGNITIVE_SCIENCE" DECIMAL(3,2),
    "COMMUNICATION_STUDIES" DECIMAL(3,2),
    "ENGLISH_AND_CULTURAL_STUDIES" DECIMAL(3,2),
    "FRENCH" DECIMAL(3,2),
    "GEOGRAPHY" DECIMAL(3,2),
    "HISTORY" DECIMAL(3,2),
    "INDIGENOUS_STUDIES" DECIMAL(3,2),
    "JUSTICE_POLITICAL_PHILOSOPHY_AND_LAW" DECIMAL(3,2),
    "LABOUR_STUDIES" DECIMAL(3,2),
    "LINGUISTICS" DECIMAL(3,2),
    "MULTIMEDIA" DECIMAL(3,2),
    "PHILOSOPHY" DECIMAL(3,2),
    "POLITICAL_SCIENCE" DECIMAL(3,2),
    "SOCIETY_CULTURE_AND_RELIGION" DECIMAL(3,2),
    "SOCIAL_PSYCHOLOGY" DECIMAL(3,2),
    "SOCIOLOGY" DECIMAL(3,2),
    "THEATRE_AND_FILM" DECIMAL(3,2),
    "MUSIC" DECIMAL(3,2),
    "STUDIO_ART" DECIMAL(3,2),
    "SOCIAL_WORK" DECIMAL(3,2),
    "LAW" DECIMAL(3,2),
    "CHEMICAL_AND_PHYSICAL_SCIENCES" DECIMAL(3,2),
    "INTEGRATED_SCIENCES" DECIMAL(3,2),
    "LIFE_SCIENCES" DECIMAL(3,2),
    "MATHEMATICS_AND_STATISTICS" DECIMAL(3,2),
    "BIOSTATISTICS" DECIMAL(3,2),
    "DATA_SCIENCE" DECIMAL(3,2),
    "EARTH_AND_ENVIRONMENTAL_SCIENCES" DECIMAL(3,2),
    "ACTUARIAL_AND_FINANCIAL_MATHEMATICS" DECIMAL(3,2),
    "ASTROPHYSICS" DECIMAL(3,2),
    "BIOCHEMISTRY" DECIMAL(3,2),
    "BIOLOGY" DECIMAL(3,2),
    "CHEMICAL_BIOLOGY" DECIMAL(3,2),
    "CHEMISTRY" DECIMAL(3,2),
    "ENVIRONMENTAL_SCIENCES" DECIMAL(3,2),
    "COMPUTATIONAL_MATHEMATICS" DECIMAL(3,2),
    "NEUROSCIENCE" DECIMAL(3,2),
    "PHYSICS" DECIMAL(3,2),
    "PSYCHOLOGY_NEUROSCIENCE_AND_BEHAVIOUR" DECIMAL(3,2),
    "KINESIOLOGY" DECIMAL(3,2),
    "MEDICAL_RADIATION" DECIMAL(3,2),

    PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "_LanguageToUser" (
    "A" INTEGER NOT NULL,
    "B" INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "_MajorsToUser" (
    "A" INTEGER NOT NULL,
    "B" INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "_SkillsToUser" (
    "A" INTEGER NOT NULL,
    "B" INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "_UniversityToUser" (
    "A" INTEGER NOT NULL,
    "B" INTEGER NOT NULL
);

-- CreateIndex
CREATE UNIQUE INDEX "Mentor.userId_unique" ON "Mentor"("userId");

-- CreateIndex
CREATE UNIQUE INDEX "Mentee.userId_unique" ON "Mentee"("userId");

-- CreateIndex
CREATE UNIQUE INDEX "University.name_unique" ON "University"("name");

-- CreateIndex
CREATE UNIQUE INDEX "Majors.major_unique" ON "Majors"("major");

-- CreateIndex
CREATE UNIQUE INDEX "Skills.skill_unique" ON "Skills"("skill");

-- CreateIndex
CREATE UNIQUE INDEX "Language.language_unique" ON "Language"("language");

-- CreateIndex
CREATE UNIQUE INDEX "_LanguageToUser_AB_unique" ON "_LanguageToUser"("A", "B");

-- CreateIndex
CREATE INDEX "_LanguageToUser_B_index" ON "_LanguageToUser"("B");

-- CreateIndex
CREATE UNIQUE INDEX "_MajorsToUser_AB_unique" ON "_MajorsToUser"("A", "B");

-- CreateIndex
CREATE INDEX "_MajorsToUser_B_index" ON "_MajorsToUser"("B");

-- CreateIndex
CREATE UNIQUE INDEX "_SkillsToUser_AB_unique" ON "_SkillsToUser"("A", "B");

-- CreateIndex
CREATE INDEX "_SkillsToUser_B_index" ON "_SkillsToUser"("B");

-- CreateIndex
CREATE UNIQUE INDEX "_UniversityToUser_AB_unique" ON "_UniversityToUser"("A", "B");

-- CreateIndex
CREATE INDEX "_UniversityToUser_B_index" ON "_UniversityToUser"("B");

-- AddForeignKey
ALTER TABLE "Mentor" ADD FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Mentee" ADD FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Meeting" ADD FOREIGN KEY ("menteeId") REFERENCES "Mentee"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Meeting" ADD FOREIGN KEY ("mentorId") REFERENCES "Mentor"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Proposed_Time" ADD FOREIGN KEY ("meetingId") REFERENCES "Meeting"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Availability" ADD FOREIGN KEY ("mentorId") REFERENCES "Mentor"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_LanguageToUser" ADD FOREIGN KEY ("A") REFERENCES "Language"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_LanguageToUser" ADD FOREIGN KEY ("B") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_MajorsToUser" ADD FOREIGN KEY ("A") REFERENCES "Majors"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_MajorsToUser" ADD FOREIGN KEY ("B") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_SkillsToUser" ADD FOREIGN KEY ("A") REFERENCES "Skills"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_SkillsToUser" ADD FOREIGN KEY ("B") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_UniversityToUser" ADD FOREIGN KEY ("A") REFERENCES "University"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_UniversityToUser" ADD FOREIGN KEY ("B") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;
